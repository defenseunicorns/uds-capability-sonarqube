application:
  name: sonarqube
  createNamespace: ###ZARF_VAR_SONARQUBE_CREATE_NAMESPACE###
  namespace: sonarqube
  path: chart
  repository: https://repo1.dso.mil/big-bang/product/packages/sonarqube.git
  ref:
    # renovate: datasource=gitlab-tags depName=big-bang/product/packages/sonarqube versioning=loose registryUrl=https://repo1.dso.mil
    tag: 8.0.2-bb.1
  dependsOn:
    ###ZARF_VAR_SONARQUBE_DEPENDS_ON###
  baseValues:
    # hostname is deprecated and replaced with domain. But if hostname exists then use it.
    domain: ###ZARF_VAR_DOMAIN###

    # Define variables to help with conditionals later

    OpenShift:
      enabled: false

    sonarProperties:
      sonar.auth.saml.enabled: ###ZARF_VAR_SONARQUBE_IDAM_ENABLED###
      sonar.core.serverBaseURL: https://sonarqube.###ZARF_VAR_DOMAIN###
      sonar.auth.saml.applicationId: ###ZARF_VAR_SONARQUBE_IDAM_CLIENT_ID###
      sonar.auth.saml.providerName: ###ZARF_VAR_SONARQUBE_IDAM_PROVIDER_NAME###
      sonar.auth.saml.providerId: ###ZARF_VAR_SONARQUBE_IDAM_REALM_URL###
      sonar.auth.saml.loginUrl: ###ZARF_VAR_SONARQUBE_IDAM_REALM_URL###/protocol/saml
      sonar.auth.saml.certificate.secured: ###ZARF_VAR_SONARQUBE_IDAM_SAML_CERT###
      sonar.auth.saml.user.login: ###ZARF_VAR_SONARQUBE_IDAM_ATTR_LOGIN###
      sonar.auth.saml.user.name: ###ZARF_VAR_SONARQUBE_IDAM_ATTR_NAME###
      sonar.auth.saml.user.email: ###ZARF_VAR_SONARQUBE_IDAM_ATTR_EMAIL###
      sonar.auth.saml.group.name: ###ZARF_VAR_SONARQUBE_IDAM_ATTR_GROUP###

    istio:
      enabled: true
      sonarqube:
        gateways:
        - istio-system/tenant
      injection: enabled

    monitoring:
      enabled: true

    networkPolicies:
      enabled: true
      ingressLabels:
        app: null
        istio: null

    networkPolicy:
      enabled: true
      additionalNetworkPolicys:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: gitlab-runner-sandbox
            podSelector: {}
          ports:
          - port: 9000
            protocol: TCP
        egress:
        - to:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: gitlab
            podSelector:
              matchLabels:
                app: webservice
        - to:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: gitlab-runner-sandbox
            podSelector: {}
        podSelector:
          matchLabels: {}
        policyTypes:
        - Egress
        - Ingress

    image:
      pullPolicy: IfNotPresent
    annotations:
      bigbang.dev/istioVersion: ###ZARF_VAR_ISTIO_VERSION###

    jdbcOverwrite:
      enable: true
      jdbcUrl: jdbc:postgresql://sonarqube-postgres.sonarqube.svc.cluster.local:5432/sonarqubedb
      jdbcUsername: ###ZARF_VAR_SONARQUBE_DB_USERNAME###
      jdbcSecretName: sonarqube-postgres
      jdbcSecretPasswordKey: password

    postgresql:
      # Use internal database, defaults are fine
      enabled: false
      master:
        podAnnotations:
          bigbang.dev/istioVersion: ###ZARF_VAR_ISTIO_VERSION###
      slave:
        podAnnotations:
          bigbang.dev/istioVersion: ###ZARF_VAR_ISTIO_VERSION###
      postgresqlServer: sonarqube-postgres
      existingSecret: "sonarqube-postgres"
      existingSecretPasswordKey: "password"
      postgresqlUsername: ###ZARF_VAR_SONARQUBE_DB_USERNAME###
      postgresqlDatabase: "sonarqubedb"
      service:
        port: 5432
